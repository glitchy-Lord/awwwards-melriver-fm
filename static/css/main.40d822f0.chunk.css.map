{"version":3,"sources":["webpack://src/styles/components/Header.scss","webpack://src/styles/breakpoints.scss","webpack://src/styles/App.scss","webpack://src/styles/components/Banner.scss","webpack://src/styles/components/Cases.scss","webpack://src/styles/components/IntroOverlay.scss","webpack://src/styles/components/Navigation.scss"],"names":[],"mappings":"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","file":"main.40d822f0.chunk.css","sourcesContent":[".header {\r\n\tposition: fixed;\r\n\twidth: 100%;\r\n\theight: 128px;\r\n\tz-index: 4;\r\n\r\n\t@include media('<=phone') {\r\n\t\theight: 96px;\r\n\t}\r\n\r\n\t.logo {\r\n\t\ta {\r\n\t\t\tfont-size: 1.2rem;\r\n\t\t\tletter-spacing: 0.5rem;\r\n\t\t\tcolor: $black;\r\n\t\t\tfont-weight: 700;\r\n\t\t}\r\n\t}\r\n\t.nav-toggle {\r\n\t\tcursor: pointer;\r\n\t\tposition: relative;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\r\n\t\t@include media('<=tablet') {\r\n\t\t\tmargin-right: 24px;\r\n\t\t}\r\n\r\n\t\t@include media('<=phone') {\r\n\t\t\tmargin-right: 16px;\r\n\t\t\twidth: 20px;\r\n\t\t}\r\n\r\n\t\t.hamburger-menu {\r\n\t\t\twidth: 25px;\r\n\r\n\t\t\tspan {\r\n\t\t\t\tmargin-bottom: 0.3rem;\r\n\t\t\t\tbackground-color: $black;\r\n\t\t\t\theight: 2px;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tdisplay: block;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.hamburger-menu-close {\r\n\t\t\tposition: absolute;\r\n\t\t\t// display: none;\r\n\r\n\t\t\tsvg {\r\n\t\t\t\t@include media('<=tablet') {\r\n\t\t\t\t\twidth: 56px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t@include media('<=phone') {\r\n\t\t\t\t\tmargin-right: 48px;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","$breakpoints: (\r\n\t'phone': 425px,\r\n\t'tablet': 768px,\r\n\t'desktop': 1366px,\r\n\t'LGdesktop': 1920px,\r\n) !default;\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///\t\t'retina2x': (\r\n///\t\t\t'(-webkit-min-device-pixel-ratio: 2)',\r\n///\t\t\t'(min-resolution: 192dpi)'\r\n///\t\t)\r\n///\t);\r\n///\r\n$media-expressions: (\r\n\t'screen': 'screen',\r\n\t'print': 'print',\r\n\t'handheld': 'handheld',\r\n\t'retina2x': (\r\n\t\t'(-webkit-min-device-pixel-ratio: 2)',\r\n\t\t'(min-resolution: 192dpi)',\r\n\t),\r\n\t'retina3x': (\r\n\t\t'(-webkit-min-device-pixel-ratio: 3)',\r\n\t\t'(min-resolution: 350dpi)',\r\n\t),\r\n) !default;\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media(\">128px\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media(\">20em\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media(\">2.0rem\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n\t'px': 1,\r\n\t'em': 0.01,\r\n\t'rem': 0.1,\r\n) !default;\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media(\">phone\") { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media(\">phone\", \"<=tablet\") { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media(\">=358px\", \"<850px\") { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media(\">desktop\", \"<=1350px\") { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media(\"retina2x\") { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media(\">=350px\", \"<tablet\", \"retina3x\") { }\r\n///\r\n@mixin media($conditions...) {\r\n\t@for $i from 1 through length($conditions) {\r\n\t\t$conditions: set-nth(\r\n\t\t\t$conditions,\r\n\t\t\t$i,\r\n\t\t\tparse-expression(nth($conditions, $i))\r\n\t\t);\r\n\t}\r\n\r\n\t$branches: get-query-branches($conditions);\r\n\t$query: '';\r\n\r\n\t@each $branch in $branches {\r\n\t\t@if (str-length($query) != 0) {\r\n\t\t\t$query: $query + ', ';\r\n\t\t}\r\n\r\n\t\t$query: $query + $branch;\r\n\t}\r\n\r\n\t@media #{$query} {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n///\r\n/// Reads a list of media query expressions and separates logical disjunctions into different branches\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $expressions  - list of expressions\r\n///\r\n/// @throws `$expression` is not a valid expression\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function get-query-branches($expressions) {\r\n\t$result: '';\r\n\t$has-groups: false;\r\n\r\n\t// Getting initial snapshot and looking for groups\r\n\t@each $expression in $expressions {\r\n\t\t@if (str-length($result) != 0) {\r\n\t\t\t$result: $result + ' and ';\r\n\t\t}\r\n\r\n\t\t@if (type-of($expression) == 'string') {\r\n\t\t\t$result: $result + $expression;\r\n\t\t} @else if (type-of($expression) == 'list') {\r\n\t\t\t$result: $result + nth($expression, 1);\r\n\t\t\t$has-groups: true;\r\n\t\t} @else {\r\n\t\t\t@warn '#{$expression} is not a valid expression.';\r\n\t\t}\r\n\t}\r\n\r\n\t// If we have groups, we have to create all possible combinations\r\n\t@if $has-groups {\r\n\t\t@each $expression in $expressions {\r\n\t\t\t@if (type-of($expression) == 'list') {\r\n\t\t\t\t$first: nth($expression, 1);\r\n\r\n\t\t\t\t@each $member in $expression {\r\n\t\t\t\t\t@if ($member != $first) {\r\n\t\t\t\t\t\t@each $partial in $result {\r\n\t\t\t\t\t\t\t$result: join(\r\n\t\t\t\t\t\t\t\t$result,\r\n\t\t\t\t\t\t\t\tstr-replace-first($first, $member, $partial)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t@return $result;\r\n}\r\n\r\n///\r\n/// Parses a string to form a media query expression\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $expression  - expression (in string)\r\n///\r\n/// @throws Expression with type `type-of($expression)` detected, string expected\r\n/// @throws `$expression` is missing an operator\r\n/// @throws Unknown unit: `$unit`\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function parse-expression($expression) {\r\n\t$operator: '';\r\n\t$value: '';\r\n\t$element: '';\r\n\t$result: '';\r\n\t$is-width: true;\r\n\r\n\t@if (type-of($expression) != 'string') {\r\n\t\t@warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\r\n\t}\r\n\r\n\t// Separating the operator from the rest of the expression\r\n\t@if (str-slice($expression, 2, 2) == '=') {\r\n\t\t$operator: str-slice($expression, 1, 2);\r\n\t\t$value: str-slice($expression, 3);\r\n\t} @else {\r\n\t\t$operator: str-slice($expression, 1, 1);\r\n\t\t$value: str-slice($expression, 2);\r\n\t}\r\n\r\n\t// Checking what type of expression we're dealing with\r\n\t@if map-has-key($breakpoints, $value) {\r\n\t\t$result: map-get($breakpoints, $value);\r\n\t} @else if map-has-key($media-expressions, $expression) {\r\n\t\t$result: map-get($media-expressions, $expression);\r\n\t\t$is-width: false;\r\n\t} @else {\r\n\t\t$result: to-number($value);\r\n\t}\r\n\r\n\t@if ($is-width) {\r\n\t\t$unit: unit($result);\r\n\t\t$interval: 0;\r\n\r\n\t\t@if (map-has-key($unit-intervals, $unit)) {\r\n\t\t\t$interval: map-get($unit-intervals, $unit);\r\n\t\t} @else {\r\n\t\t\t@warn 'Unknown unit: #{$unit}';\r\n\t\t}\r\n\r\n\t\t@if ($operator == '>') {\r\n\t\t\t$element: '(min-width: #{$result + $interval})';\r\n\t\t} @else if ($operator == '<') {\r\n\t\t\t$element: '(max-width: #{$result - $interval})';\r\n\t\t} @else if ($operator == '>=') {\r\n\t\t\t$element: '(min-width: #{$result})';\r\n\t\t} @else if ($operator == '<=') {\r\n\t\t\t$element: '(max-width: #{$result})';\r\n\t\t} @else {\r\n\t\t\t@warn '#{$expression} is missing an operator.';\r\n\t\t}\r\n\t} @else {\r\n\t\t$element: $result;\r\n\t}\r\n\r\n\t@return $element;\r\n}\r\n\r\n///\r\n/// Replaces the first occurence of the string with the replacement string\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $search  - The value being searched for\r\n/// @param {String}   $replace  - The replacement string\r\n/// @param {String}   $subject  - The string being replaced on\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function str-replace-first($search, $replace, $subject) {\r\n\t$search-start: str-index($subject, $search);\r\n\r\n\t@if $search-start == null {\r\n\t\t@return $subject;\r\n\t}\r\n\r\n\t$result: str-slice($subject, 0, $search-start - 1);\r\n\t$result: $result + $replace;\r\n\t$result: $result + str-slice($subject, $search-start + str-length($search));\r\n\r\n\t@return $result;\r\n}\r\n\r\n///\r\n/// Casts a number to a string\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {String}   $string  - Number to be parsed\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function to-number($string) {\r\n\t// Matrices\r\n\t$strings: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';\r\n\t$numbers: 0 1 2 3 4 5 6 7 8 9;\r\n\r\n\t// Result\r\n\t$result: 0;\r\n\t$divider: 0;\r\n\t$minus: false;\r\n\r\n\t// Looping through all characters\r\n\t@for $i from 1 through str-length($string) {\r\n\t\t$character: str-slice($string, $i, $i);\r\n\t\t$index: index($strings, $character);\r\n\r\n\t\t@if $character == '-' {\r\n\t\t\t$minus: true;\r\n\t\t} @else if $character == '.' {\r\n\t\t\t$divider: 1;\r\n\t\t} @else {\r\n\t\t\t@if type-of($index) != 'number' {\r\n\t\t\t\t$result: if($minus, $result * -1, $result);\r\n\t\t\t\t@return _length($result, str-slice($string, $i));\r\n\t\t\t}\r\n\r\n\t\t\t$number: nth($numbers, $index);\r\n\r\n\t\t\t@if $divider == 0 {\r\n\t\t\t\t$result: $result * 10;\r\n\t\t\t} @else {\r\n\t\t\t\t// Move the decimal dot to the left\r\n\t\t\t\t$divider: $divider * 10;\r\n\t\t\t\t$number: $number / $divider;\r\n\t\t\t}\r\n\r\n\t\t\t$result: $result + $number;\r\n\t\t}\r\n\t}\r\n\r\n\t@return if($minus, $result * -1, $result);\r\n}\r\n\r\n@function _length($number, $unit) {\r\n\t$strings: 'px' 'cm' 'mm' '%' 'ch' 'pica' 'in' 'em' 'rem' 'pt' 'pc' 'ex' 'vw'\r\n\t\t'vh' 'vmin' 'vmax';\r\n\t$units: 1px 1cm 1mm 1% 1ch 1pica 1in 1em 1rem 1pt 1pc 1ex 1vw 1vh 1vmin\r\n\t\t1vmax;\r\n\t$index: index($strings, $unit);\r\n\r\n\t@if type-of($index) != 'number' {\r\n\t\t@warn 'Unknown unit `#{$unit}`.';\r\n\t\t@return false;\r\n\t}\r\n\r\n\t@return $number * nth($units, $index);\r\n}\r\n","// ===========================\r\n// variables\r\n// ===========================\r\n$black: #000;\r\n$white: #fff;\r\n$yellow: #fff3d8;\r\n\r\n// ===========================\r\n// imports\r\n// ===========================\r\n@import './breakpoints.scss';\r\n@import './components/Header.scss';\r\n@import './components/Banner.scss';\r\n@import './components/Cases.scss';\r\n@import './components/IntroOverlay.scss';\r\n@import './components/Navigation.scss';\r\n\r\n* {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tlist-style: none;\r\n\ttext-decoration: none;\r\n}\r\n\r\nhtml {\r\n\tfont-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n\tfont-size: 62.5%;\r\n}\r\n\r\nbody {\r\n\toverflow: hidden;\r\n\r\n\t@include media('<=tablet') {\r\n\t\toverflow: auto;\r\n\t\toverflow: inherit;\r\n\t}\r\n}\r\n\r\n.container {\r\n\twidth: 1560px;\r\n\tmin-width: 1560px;\r\n\tmargin: 0 auto;\r\n\theight: 100%;\r\n\t@include media('<=1560px') {\r\n\t\twidth: 1280px;\r\n\t\tmin-width: 1280px;\r\n\t}\r\n\t@include media('<=desktop') {\r\n\t\twidth: 1080px;\r\n\t\tmin-width: 1080px;\r\n\t}\r\n\t@include media('<=1080px') {\r\n\t\twidth: 100%;\r\n\t\tmin-width: 100%;\r\n\t}\r\n\t.row {\r\n\t\tdisplay: flex;\r\n\t\theight: 100%;\r\n\t\tpadding: 0 32px;\r\n\t\t@include media('<=phone') {\r\n\t\t\tpadding: 0 16px;\r\n\t\t}\r\n\t}\r\n\t.v-center {\r\n\t\talign-items: center;\r\n\t}\r\n\t.space-between {\r\n\t\tjustify-content: space-between;\r\n\t}\r\n}\r\n\r\n.container-fluid {\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\t.row {\r\n\t\tdisplay: flex;\r\n\t\theight: 100%;\r\n\r\n\t\t// @include media('<=tablet') {\r\n\t\t// \toverflow: inherit;\r\n\t\t// }\r\n\t}\r\n}\r\n\r\n.App {\r\n\tz-index: 2;\r\n\t// transform: translateY(0);\r\n\tposition: relative;\r\n}\r\n\r\n.page {\r\n\theight: 100vh;\r\n\twidth: 100%;\r\n\tbackground-color: $white;\r\n\r\n\t.row {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t}\r\n}\r\n\r\n.casePage {\r\n\theight: 100vh;\r\n\tdisplay: block;\r\n\tposition: relative;\r\n\tbackground-color: #000;\r\n\r\n\timg {\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\tobject-fit: cover;\r\n\t\topacity: 0.4;\r\n\t}\r\n}\r\n",".main {\r\n\theight: 50vh; //fallback option\r\n\theight: calc(var(--vh, 1vh) * 50);\r\n\tbackground-color: $white;\r\n\r\n\t.row {\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\r\n\t\th2 {\r\n\t\t\tfont-size: 3.5rem;\r\n\t\t\tline-height: 4.2rem;\r\n\t\t\tfont-weight: 400;\r\n\t\t\tz-index: 10;\r\n\t\t\tcolor: $white;\r\n\t\t\tmix-blend-mode: difference;\r\n\t\t\tmargin: 2rem 0;\r\n\r\n\t\t\t@include media('<=tablet') {\r\n\t\t\t\tfont-size: 2.4rem;\r\n\t\t\t\tline-height: 3rem;\r\n\t\t\t\t// font-size: 2rem;\r\n\t\t\t\t// line-height: 2.2rem;\r\n\t\t\t}\r\n\r\n\t\t\t@include media('<=phone') {\r\n\t\t\t\t// margin-top: 72px;\r\n\t\t\t\t// font-size: 1.5rem;\r\n\t\t\t\tfont-size: 2rem;\r\n\t\t\t\tline-height: 2.2rem;\r\n\t\t\t}\r\n\r\n\t\t\t.line {\r\n\t\t\t\tmargin-bottom: -1.5rem;\r\n\t\t\t\theight: 56px;\r\n\t\t\t\tposition: relative;\r\n\t\t\t\toverflow: hidden;\r\n\r\n\t\t\t\t@include media('<=tablet') {\r\n\t\t\t\t\theight: 48px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t@include media('<=phone') {\r\n\t\t\t\t\theight: 32px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tspan {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.btn-row {\r\n\t\t\twidth: max-content;\r\n\t\t\tposition: relative;\r\n\t\t\tz-index: 2;\r\n\t\t\tmargin-bottom: -2rem;\r\n\r\n\t\t\ta {\r\n\t\t\t\tfont-size: 1.6rem;\r\n\t\t\t\tcolor: $black;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tfont-weight: 600;\r\n\r\n\t\t\t\t@include media('<=tablet') {\r\n\t\t\t\t\tfont-size: 1.3rem;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t@include media('<=phone') {\r\n\t\t\t\t\tfont-size: 1.1rem;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsvg {\r\n\t\t\t\t\tmargin-left: 16px;\r\n\t\t\t\t\tborder: 2px solid $black;\r\n\t\t\t\t\tpadding: 12px;\r\n\t\t\t\t\theight: 24px;\r\n\t\t\t\t\twidth: 24px;\r\n\t\t\t\t\tborder-radius: 50%;\r\n\t\t\t\t\ttransition: 0.4s ease-in-out;\r\n\r\n\t\t\t\t\t@include media('<=tablet') {\r\n\t\t\t\t\t\tpadding: 6px;\r\n\t\t\t\t\t\twidth: 20px;\r\n\t\t\t\t\t\theight: 20px;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t@include media('<=phone') {\r\n\t\t\t\t\t\tpadding: 4px;\r\n\t\t\t\t\t\twidth: 16px;\r\n\t\t\t\t\t\theight: 16px;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t&:hover svg {\r\n\t\t\t\t\tbackground-color: $black;\r\n\t\t\t\t\tcolor: $white;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n",".cases {\r\n\theight: 50vh;\r\n\t// height: calc(var(--vh, 1vh) * 50);\r\n\r\n\t&-navigation {\r\n\t\tposition: absolute;\r\n\t\tbottom: 0;\r\n\t\twidth: 100%;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tz-index: 6;\r\n\t\tpadding: 32px;\r\n\t\tbox-sizing: border-box;\r\n\r\n\t\t@include media('<=tablet') {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\t}\r\n\t&-arrow {\r\n\t\tbackground-color: rgba($black, 0.4);\r\n\t\theight: 72px;\r\n\t\twidth: 72px;\r\n\t\tborder-radius: 50%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\r\n\t\tsvg {\r\n\t\t\tcolor: $white;\r\n\t\t\theight: 28px;\r\n\t\t\twidth: 28px;\r\n\t\t}\r\n\t\t&.disabled {\r\n\t\t\topacity: 0.3;\r\n\t\t}\r\n\t}\r\n\t.row {\r\n\t\t@include media('<=tablet') {\r\n\t\t\tflex-direction: column;\r\n\t\t}\r\n\r\n\t\t.case {\r\n\t\t\tposition: relative;\r\n\t\t\tbackground-color: $black;\r\n\t\t\tcursor: pointer;\r\n\t\t\t&:hover {\r\n\t\t\t\t.case-image {\r\n\t\t\t\t\topacity: 0.4;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t&-details {\r\n\t\t\t\twidth: calc(100vw / 3);\r\n\t\t\t\theight: 50vh;\r\n\t\t\t\t// height: calc(var(--vh, 1vh) * 50);\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t\tpadding: 32px;\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\tz-index: 1;\r\n\t\t\t\tposition: relative;\r\n\r\n\t\t\t\t@include media('<=tablet') {\r\n\t\t\t\t\twidth: 100vw;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t@include media('<=phone') {\r\n\t\t\t\t\tpadding: 16px;\r\n\t\t\t\t}\r\n\t\t\t\tspan {\r\n\t\t\t\t\tmargin-top: 156px;\r\n\t\t\t\t\tfont-size: 1.6rem;\r\n\t\t\t\t\topacity: 0.8;\r\n\t\t\t\t\tcolor: $white;\r\n\t\t\t\t\tfont-weight: 600;\r\n\r\n\t\t\t\t\t@include media('<=desktop', '>tablet') {\r\n\t\t\t\t\t\tfont-size: 1.4rem;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t@include media('<=phone') {\r\n\t\t\t\t\t\tfont-size: 2.4rem;\r\n\t\t\t\t\t\tline-height: 2.2rem;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\th2 {\r\n\t\t\t\t\tfont-size: 2.4rem;\r\n\t\t\t\t\tline-height: 3.4rem;\r\n\t\t\t\t\twidth: 85%;\r\n\t\t\t\t\tmargin-top: 16px;\r\n\t\t\t\t\tcolor: $white;\r\n\r\n\t\t\t\t\t@include media('<=desktop', '>tablet') {\r\n\t\t\t\t\t\tfont-size: 2rem;\r\n\t\t\t\t\t\tline-height: 2.4rem;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t@include media('<=phone') {\r\n\t\t\t\t\t\tfont-size: 1.7rem;\r\n\t\t\t\t\t\tline-height: 2.2rem;\r\n\t\t\t\t\t\tmargin-top: 8px;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t&-image {\r\n\t\t\t\ttop: 0;\r\n\t\t\t\tleft: 0;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 100%;\r\n\t\t\t\toverflow: hidden;\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\topacity: 0.65;\r\n\t\t\t\ttransition: 0.4s cubic-bezier(0.6, -0.05, 0.1, 0.99);\r\n\r\n\t\t\t\timg {\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tobject-fit: cover;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n",".intro-overlay {\r\n\t.top {\r\n\t\theight: 50vh;\r\n\t\theight: calc(var(--vh, 1vh) * 50);\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\tz-index: 8;\r\n\r\n\t\t.overlay-top {\r\n\t\t\tposition: absolute;\r\n\t\t\theight: 100%;\r\n\t\t\twidth: calc(100vw / 3);\r\n\t\t\tbackground-color: $black;\r\n\t\t\tbottom: 0;\r\n\t\t\tleft: 0;\r\n\t\t\tright: 0;\r\n\r\n\t\t\t@include media('<=tablet') {\r\n\t\t\t\twidth: 100vw;\r\n\t\t\t}\r\n\r\n\t\t\t&:nth-child(2) {\r\n\t\t\t\tleft: calc(100% / 3);\r\n\r\n\t\t\t\t@include media('<=tablet') {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t&:nth-child(3) {\r\n\t\t\t\tleft: calc(2 * (100% / 3));\r\n\r\n\t\t\t\t@include media('<=tablet') {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t.bottom {\r\n\t\theight: 50vh;\r\n\t\theight: calc(var(--vh, 1vh) * 50);\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\tbottom: 0;\r\n\t\tz-index: 8;\r\n\r\n\t\t.overlay-bottom {\r\n\t\t\tposition: absolute;\r\n\t\t\theight: 100%;\r\n\t\t\twidth: calc(100vw / 3);\r\n\t\t\tbackground-color: $black;\r\n\t\t\tbottom: 0;\r\n\t\t\tright: calc(2 * (100% / 3));\r\n\r\n\t\t\t@include media('<=tablet') {\r\n\t\t\t\tright: 0;\r\n\t\t\t\twidth: 100vw;\r\n\t\t\t}\r\n\r\n\t\t\t&:nth-child(2) {\r\n\t\t\t\tright: calc(100% / 3);\r\n\r\n\t\t\t\t@include media('<=tablet') {\r\n\t\t\t\t\ttop: 100%;\r\n\t\t\t\t\tright: 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t&:nth-child(3) {\r\n\t\t\t\tright: 0;\r\n\r\n\t\t\t\t@include media('<=tablet') {\r\n\t\t\t\t\ttop: 200%;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n",".navbar {\r\n\tleft: 0;\r\n\ttop: -1px;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tz-index: 1;\r\n\tposition: fixed;\r\n\toverflow: hidden;\r\n\tbackground-color: $yellow;\r\n\r\n\ta {\r\n\t\tposition: relative;\r\n\r\n\t\t&::after {\r\n\t\t\tcontent: '';\r\n\t\t\tposition: absolute;\r\n\t\t\twidth: 0;\r\n\t\t\theight: 2px;\r\n\t\t\tdisplay: block;\r\n\t\t\tmargin-top: 5px;\r\n\t\t\tright: 0;\r\n\t\t\tbackground-color: $black;\r\n\t\t\ttransition: 0.4s ease;\r\n\t\t}\r\n\r\n\t\t&:hover {\r\n\t\t\t&::after {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tleft: 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.nav-columns {\r\n\t\ttransform: translateY(125px);\r\n\t\tdisplay: flex;\r\n\t\tpadding: 0 32px;\r\n\r\n\t\t@include media('<=654px') {\r\n\t\t\tflex-direction: column;\r\n\t\t}\r\n\r\n\t\t@include media('<=phone') {\r\n\t\t\tpadding: 0 16px;\r\n\t\t}\r\n\r\n\t\t.nav-column {\r\n\t\t\twidth: 45%;\r\n\r\n\t\t\t@include media('<=654px') {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\t\t\t&:last-child {\r\n\t\t\t\twidth: 55%;\r\n\r\n\t\t\t\t@include media('<=654px') {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t.nav-label {\r\n\t\t\t\tmargin-bottom: 3rem;\r\n\t\t\t\tfont-size: 1.2rem;\r\n\r\n\t\t\t\t@include media('<=tablet') {\r\n\t\t\t\t\tfont-size: 1rem;\r\n\t\t\t\t\tmargin-bottom: 1.4rem;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t@include media('<=phone') {\r\n\t\t\t\t\tfont-size: 0.875rem;\r\n\t\t\t\t\tmargin-bottom: 1.2rem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t.nav-links {\r\n\t\t\t\tpadding: 0;\r\n\t\t\t\tmargin: 0;\r\n\r\n\t\t\t\tli {\r\n\t\t\t\t\tmargin-bottom: 2.8rem;\r\n\r\n\t\t\t\t\t@include media('<=phone') {\r\n\t\t\t\t\t\tmargin-bottom: 1.6rem;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ta {\r\n\t\t\t\t\t\tfont-weight: 600;\r\n\t\t\t\t\t\tfont-size: 2.8rem;\r\n\t\t\t\t\t\tcolor: $black;\r\n\r\n\t\t\t\t\t\t@include media('<=phone') {\r\n\t\t\t\t\t\t\tfont-size: 2rem;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t.nav-infos {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-wrap: wrap;\r\n\r\n\t\t\t\t@include media('<=654px') {\r\n\t\t\t\t\tjustify-content: space-between;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.nav-info {\r\n\t\t\t\t\tpadding: 0;\r\n\t\t\t\t\twidth: 50%;\r\n\r\n\t\t\t\t\t&:nth-child(2),\r\n\t\t\t\t\t&:nth-child(3) {\r\n\t\t\t\t\t\t@include media('<=654px') {\r\n\t\t\t\t\t\t\tdisplay: none;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t.nav-info-label {\r\n\t\t\t\t\t\tfont-weight: 600;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tli {\r\n\t\t\t\t\t\tfont-weight: 300;\r\n\t\t\t\t\t\tfont-size: 1.4rem;\r\n\t\t\t\t\t\tmargin-bottom: 1.2rem;\r\n\r\n\t\t\t\t\t\t@include media('<=tablet') {\r\n\t\t\t\t\t\t\tfont-size: 1.2rem;\r\n\t\t\t\t\t\t\tmargin-bottom: 1rem;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t@include media('<=phone') {\r\n\t\t\t\t\t\t\tfont-size: 1rem;\r\n\t\t\t\t\t\t\tmargin-bottom: 0.875rem;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ta {\r\n\t\t\t\t\t\t\tcolor: $black;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"]}